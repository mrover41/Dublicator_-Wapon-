<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CustomItems</name>
    </assembly>
    <members>
        <member name="T:CustomItems.API.API">
            <summary>
            A collection of API methods.
            </summary>
        </member>
        <member name="M:CustomItems.API.API.RegisterCustomItem(CustomItems.API.CustomItem)">
            <summary>
            Registers a <see cref="T:CustomItems.API.CustomItem"/> manager with the plugin.
            </summary>
            <param name="item">The <see cref="T:CustomItems.API.CustomItem"/> to register.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating whether or not the item was registered.</returns>
        </member>
        <member name="M:CustomItems.API.API.UnregisterCustomItem(CustomItems.API.CustomItem)">
            <summary>
            Unregisters a <see cref="T:CustomItems.API.CustomItem"/> manager.
            </summary>
            <param name="item">The <see cref="T:CustomItems.API.CustomItem"/> to unregister.</param>
        </member>
        <member name="M:CustomItems.API.API.TryGetItem(System.String,CustomItems.API.CustomItem@)">
            <summary>
            Tries to get a <see cref="T:CustomItems.API.CustomItem"/> with a particular name.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the item.</param>
            <param name="item">The <see cref="T:CustomItems.API.CustomItem"/> item found.</param>
            <returns>The <see cref="T:CustomItems.API.CustomItem"/> matching the search. Can be null.</returns>
        </member>
        <member name="M:CustomItems.API.API.TryGetItem(System.Int32,CustomItems.API.CustomItem@)">
            <summary>
            Tries to get a <see cref="T:CustomItems.API.CustomItem"/> with a particular ID.
            </summary>
            <param name="id">The <see cref="T:System.Int32"/>ID of the item to look for.</param>
            <param name="item">The <see cref="T:CustomItems.API.CustomItem"/> found.</param>
            <returns>The <see cref="T:CustomItems.API.CustomItem"/> matching the search. Can be null.</returns>
        </member>
        <member name="M:CustomItems.API.API.GiveItem(Exiled.API.Features.Player,CustomItems.API.CustomItem)">
            <summary>
            Gives the specified item to a player.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to give the item to.</param>
            <param name="item">The <see cref="T:CustomItems.API.CustomItem"/> to give to the player.</param>
        </member>
        <member name="M:CustomItems.API.API.GiveItem(Exiled.API.Features.Player,CustomItems.API.CustomItem,System.Boolean)">
            <summary>
            Gives the specified item to a player.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to give the item to.</param>
            <param name="item">The <see cref="T:CustomItems.API.CustomItem"/> to give to the player.</param>
            <param name="displayMessage">Whether or not to show a message when the item is given.</param>
        </member>
        <member name="M:CustomItems.API.API.GiveItem(Exiled.API.Features.Player,System.String)">
            <summary>
            Gives the player a specified item.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to give the item to.</param>
            <param name="name">The <see cref="T:System.String"/> name of the item to give.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the player was given the item or not.</returns>
        </member>
        <member name="M:CustomItems.API.API.GiveItem(Exiled.API.Features.Player,System.Int32)">
            <summary>
            Gives the player a specified item.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to give the item to.</param>
            <param name="id">The <see cref="T:System.Int32"/> name of the item to give.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating if the player was given the item or not.</returns>
        </member>
        <member name="M:CustomItems.API.API.SpawnItem(CustomItems.API.CustomItem,UnityEngine.Vector3)">
            <summary>
            Spawns a specified item at a location.
            </summary>
            <param name="item">The <see cref="T:CustomItems.API.CustomItem"/> to spawn.</param>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> location to spawn the item at.</param>
        </member>
        <member name="M:CustomItems.API.API.SpawnItem(System.String,UnityEngine.Vector3)">
            <summary>
            Spawns a specified item at a location.
            </summary>
            <param name="name">The <see cref="T:System.String"/> name of the item to spawn.</param>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> location to spawn the item.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating whether or not the item was spawned.</returns>
        </member>
        <member name="M:CustomItems.API.API.SpawnItem(System.Int32,UnityEngine.Vector3)">
            <summary>
            Spawns a specified item at a location.
            </summary>
            <param name="id">The <see cref="T:System.Int32"/> ID of the item to spawn.</param>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> location to spawn the item.</param>
            <returns>A <see cref="T:System.Boolean"/> value indicating whether or not the item was spawned.</returns>
        </member>
        <member name="M:CustomItems.API.API.GetInstalledItems">
            <summary>
            Gets a list of all currently active Item Managers.
            </summary>
            <returns>A list of all <see cref="T:CustomItems.API.CustomItem"/>s.</returns>
        </member>
        <member name="M:CustomItems.API.API.GetDoor(CustomItems.API.SpawnLocation)">
            <summary>
            Tries to get the <see cref="T:UnityEngine.Transform"/> of the door used for a specific <see cref="T:CustomItems.API.SpawnLocation"/>.
            </summary>
            <param name="location">The <see cref="T:CustomItems.API.SpawnLocation"/> to check.</param>
            <returns>The <see cref="T:UnityEngine.Transform"/> used for that spawn location. Can be null.</returns>
        </member>
        <member name="M:CustomItems.API.API.TryGetLocation(CustomItems.API.SpawnLocation)">
            <summary>
            Tries to get the <see cref="T:UnityEngine.Vector3"/> used for a specific <see cref="T:CustomItems.API.SpawnLocation"/>.
            </summary>
            <param name="location">The <see cref="T:CustomItems.API.SpawnLocation"/> to check.</param>
            <returns>The <see cref="T:UnityEngine.Vector3"/> used for that spawn location. Can be <see cref="P:UnityEngine.Vector3.zero"/>.</returns>
        </member>
        <member name="M:CustomItems.API.API.HasCustomItemInHand(Exiled.API.Features.Player,CustomItems.API.CustomItem@)">
            <summary>
            Checks to see if the player's current item is a custom item.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to check.</param>
            <param name="item">The <see cref="T:CustomItems.API.CustomItem"/> in their hand.</param>
            <returns>True if the player has a custom item in their hand.</returns>
        </member>
        <member name="M:CustomItems.API.API.HasCustomItem(Exiled.API.Features.Player,System.Collections.Generic.IEnumerable{CustomItems.API.CustomItem}@)">
            <summary>
            Checks to see if the player has any custom items in their inventory.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to check.</param>
            <param name="cItems">A <see cref="T:System.Collections.Generic.IEnumerable`1"/> of custom items in their possession.</param>
            <returns>True if they have any custom items.</returns>
        </member>
        <member name="M:CustomItems.API.API.IsCustomItem(Inventory.SyncItemInfo,CustomItems.API.CustomItem@)">
            <summary>
            Checks to see if this item is a custom item.
            </summary>
            <param name="item">The <see cref="T:Inventory.SyncItemInfo"/> to check.</param>
            <param name="cItem">The <see cref="T:CustomItems.API.CustomItem"/> this item is.</param>
            <returns>True if the item is a custom item.</returns>
        </member>
        <member name="M:CustomItems.API.API.IsCustomItem(Pickup,CustomItems.API.CustomItem@)">
            <summary>
            Checks if this pickup is a custom item.
            </summary>
            <param name="pickup">The <see cref="T:Pickup"/> to check.</param>
            <param name="item">The <see cref="T:CustomItems.API.CustomItem"/> this pickup is.</param>
            <returns>True if the pickup is a custom item.</returns>
        </member>
        <member name="T:CustomItems.API.CustomGrenade">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.API.CustomGrenade.#ctor(ItemType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomItems.API.CustomGrenade"/> class.
            </summary>
            <param name="type">The <see cref="T:ItemType"/> to be used.</param>
            <param name="itemId">The <see cref="T:System.Int32"/> custom ID to be used.</param>
        </member>
        <member name="P:CustomItems.API.CustomGrenade.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.API.CustomGrenade.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.API.CustomGrenade.ExplodeOnCollision">
            <summary>
            Gets or sets a value indicating whether gets or sets a value that determines if the grenade should explode immediately when contacting any surface.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomGrenade.FuseTime">
            <summary>
            Gets or sets a value indicating how long the grenade's fuse time should be.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomGrenade.TrackedGrenades">
            <summary>
            Gets a value indicating what thrown grenades are currently being tracked.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomGrenade.Init">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.API.CustomGrenade.Destroy">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.API.CustomGrenade.OnThrowingGrenade(Exiled.Events.EventArgs.ThrowingGrenadeEventArgs)">
            <summary>
            Handles tracking thrown custom grenades.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.ThrowingGrenadeEventArgs"/>.</param>
        </member>
        <member name="M:CustomItems.API.CustomGrenade.OnWaitingForPlayers">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.API.CustomGrenade.CheckGrenade(UnityEngine.GameObject)">
            <summary>
            Checks to see if the grenade is a tracked custom grenade.
            </summary>
            <param name="grenade">The <see cref="T:UnityEngine.GameObject"/> of the grenade to check.</param>
            <returns>True if it is a custom grenade.</returns>
        </member>
        <member name="M:CustomItems.API.CustomGrenade.GetGrenadeType(ItemType)">
            <summary>
            Converts a <see cref="T:ItemType"/> into a <see cref="T:Exiled.API.Enums.GrenadeType"/>.
            </summary>
            <param name="type">The <see cref="T:ItemType"/> to check.</param>
            <returns><see cref="T:Exiled.API.Enums.GrenadeType"/>.</returns>
        </member>
        <member name="M:CustomItems.API.CustomGrenade.SpawnGrenade(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,Exiled.API.Enums.GrenadeType,Exiled.API.Features.Player)">
            <summary>
            Spawns a live grenade object on the map.
            </summary>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> to spawn the grenade at.</param>
            <param name="velocity">The <see cref="T:UnityEngine.Vector3"/> directional velocity the grenade should move at.</param>
            <param name="fusetime">The <see cref="T:System.Single"/> fuse time of the grenade.</param>
            <param name="grenadeType">The <see cref="T:Exiled.API.Enums.GrenadeType"/> of the grenade to spawn.</param>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to count as the thrower of the grenade.</param>
            <returns>The <see cref="T:Grenades.Grenade"/> being spawned.</returns>
        </member>
        <member name="T:CustomItems.API.CustomItem">
            <summary>
            The Custom Item base class.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomItem.#ctor(ItemType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomItems.API.CustomItem"/> class.
            </summary>
            <param name="type">The <see cref="P:CustomItems.API.CustomItem.ItemType"/> to be used.</param>
            <param name="itemId">The <see cref="T:System.Int32"/> custom item ID to be used.</param>
        </member>
        <member name="P:CustomItems.API.CustomItem.Name">
            <summary>
            Gets or sets the name of the item.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomItem.Description">
            <summary>
            Gets or sets the description of the item.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomItem.SpawnLimit">
            <summary>
            Gets or sets how many of the item are allowed to spawn in the map when a round starts.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomItem.SpawnLocations">
            <summary>
            Gets or sets the list of spawn locations and chances for each one.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomItem.Id">
            <summary>
            Gets or sets the custom ItemID of the item.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomItem.ItemType">
            <summary>
            Gets or sets the ItemType to use for this item.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomItem.ItemIds">
            <summary>
            Gets the list of uniqIds being tracked as the current item.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomItem.ItemPickups">
            <summary>
            Gets the list of Pickups being tracked as the current item.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomItem.SpawnItem(UnityEngine.Vector3)">
            <summary>
            Spawns the item in a specific location.
            </summary>
            <param name="position">The <see cref="T:UnityEngine.Vector3"/> where the item will be spawned.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.GiveItem(Exiled.API.Features.Player)">
            <summary>
            Gives the item to a player.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who will recieve the item.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.GiveItem(Exiled.API.Features.Player,System.Boolean)">
            <summary>
            Gives the item to a player.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who will recieve the item.</param>
            <param name="displayMessage">Indicates whether or not <see cref="M:CustomItems.API.CustomItem.ShowMessage(Exiled.API.Features.Player)"/> will be called when the player received the item.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.Init">
            <summary>
            Called when the item is first registered.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomItem.Destroy">
            <summary>
            Called when the item is unregistered.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomItem.CheckItem(Pickup)">
            <summary>
            Checks the specified pickup to see if it is a custom item.
            </summary>
            <param name="pickup">The <see cref="T:Pickup"/> to check.</param>
            <returns>True if it is a custom item.</returns>
        </member>
        <member name="M:CustomItems.API.CustomItem.CheckItem(Inventory.SyncItemInfo)">
            <summary>
            Checks the specified inventory item to see if it is a custom item.
            </summary>
            <param name="item">The <see cref="T:Inventory.SyncItemInfo"/> to check.</param>
            <returns>True if it is a custom item.</returns>
        </member>
        <member name="M:CustomItems.API.CustomItem.ToString">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.API.CustomItem.LoadEvents">
            <summary>
            Called after the manager is initialized, to allow loading of special event handlers.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomItem.UnloadEvents">
            <summary>
            Called when the manager is being destroyed, to allow unloading of special event handlers.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomItem.OnWaitingForPlayers">
            <summary>
            Clears the lists of item uniqIDs and Pickups since any still in the list will be invalid.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomItem.OnDroppingItem(Exiled.Events.EventArgs.DroppingItemEventArgs)">
            <summary>
            Handles tracking items when they are dropped by a player.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.DroppingItemEventArgs"/>.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.OnPickingUpItem(Exiled.Events.EventArgs.PickingUpItemEventArgs)">
            <summary>
            Handles tracking items when they are picked up by a player.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.PickingUpItemEventArgs"/>.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.OnUpgradingItems(Exiled.Events.EventArgs.UpgradingItemsEventArgs)">
            <summary>
            Handles making sure custom items are not affected by SCP-914.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.UpgradingItemsEventArgs"/>.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.OnHandcuffing(Exiled.Events.EventArgs.HandcuffingEventArgs)">
            <summary>
            Handles making sure custom items are not 'lost' when being handcuffed.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.HandcuffingEventArgs"/>.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.OnDying(Exiled.Events.EventArgs.DyingEventArgs)">
            <summary>
            Handles making sure custom items are not 'lost' when a player dies.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.DyingEventArgs"/>.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.OnEscaping(Exiled.Events.EventArgs.EscapingEventArgs)">
            <summary>
            Handles making sure custom items are not 'lost' when a player escapes.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.EscapingEventArgs"/>.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.ShowMessage(Exiled.API.Features.Player)">
            <summary>
            Shows a message to the player when they pickup a custom item.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who will be shown the message.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.ItemGiven(Exiled.API.Features.Player)">
            <summary>
            Called when a player is given the item directly via a command or plugin.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who received the item.</param>
        </member>
        <member name="M:CustomItems.API.CustomItem.CheckAndLoadSubclassEvent">
            <summary>
            Checks to see if Subclassing is loaded, and register the event for it if it is.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomItem.CheckAndUnloadSubclassEvent">
            <summary>
            Checks to see if Subclassing is loaded, and unregister the event for it if it is.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomItem.OnAddingClass(CustomItems.Events.AddClassEventArgs)">
            <summary>
            Handles giving out custom items to subclasses.
            </summary>
            <param name="ev"><see cref="T:CustomItems.Events.AddClassEventArgs"/>.</param>
        </member>
        <member name="T:CustomItems.API.CustomWeapon">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.API.CustomWeapon.#ctor(ItemType,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomItems.API.CustomWeapon"/> class.
            </summary>
            <param name="type">The <see cref="T:ItemType"/> to be used.</param>
            <param name="clipSize">The <see cref="T:System.Int32"/> size of the clip to be used.</param>
            <param name="itemId">The <see cref="T:System.Int32"/> ID to be used.</param>
        </member>
        <member name="P:CustomItems.API.CustomWeapon.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.API.CustomWeapon.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.API.CustomWeapon.ClipSize">
            <summary>
            Gets or sets a value indicating how big of a clip the weapon will have.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomWeapon.ModBarrel">
            <summary>
            Gets or sets a value indicating what <see cref="P:CustomItems.API.CustomWeapon.ModBarrel"/> the weapon will have.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomWeapon.ModSight">
            <summary>
            Gets or sets a value indicating what <see cref="P:CustomItems.API.CustomWeapon.ModSight"/> the weapon will have.
            </summary>
        </member>
        <member name="P:CustomItems.API.CustomWeapon.ModOther">
            <summary>
            Gets or sets a value indicating what <see cref="P:CustomItems.API.CustomWeapon.ModOther"/> the weapon will have.
            </summary>
        </member>
        <member name="M:CustomItems.API.CustomWeapon.Init">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.API.CustomWeapon.Destroy">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.API.CustomWeapon.SpawnItem(UnityEngine.Vector3)">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.API.CustomWeapon.GiveItem(Exiled.API.Features.Player)">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.API.CustomWeapon.GiveItem(Exiled.API.Features.Player,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.API.CustomWeapon.Reload(Exiled.API.Features.Player)">
            <summary>
            Reloads the current weapon for the player.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> who's weapon should be reloaded.</param>
        </member>
        <member name="M:CustomItems.API.CustomWeapon.OnReloadingWeapon(Exiled.Events.EventArgs.ReloadingWeaponEventArgs)">
            <summary>
            Handles reloading for custom weapons.
            </summary>
            <param name="ev"><see cref="T:Exiled.Events.EventArgs.ReloadingWeaponEventArgs"/>.</param>
        </member>
        <member name="T:CustomItems.API.SpawnLocation">
            <summary>
            All of the valid spawn locations.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside012">
            <summary>
            The inside of 012's hallway door.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside012Bottom">
            <summary>
            The inside of the locked door leaving to SCP-012's room.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside012Locker">
            <summary>
            The inside of the locked 012 armory door.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside049Armory">
            <summary>
            The inside of SCP-049's Armory room.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside079Secondary">
            <summary>
            The inside of the inner SCP-079 door.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside096">
            <summary>
            The inside of SCP-096's locked room behind his spawn.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside173Armory">
            <summary>
            The inside of the armory next to SCP-173's spawn.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside173Bottom">
            <summary>
            The inside of the door at the bottom of SCP-173's stairs.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside173Connector">
            <summary>
            On the side closest to SCP-173's spawn, on the top of the stairs.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideEscapePrimary">
            <summary>
            Inside the first Escape door.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideEscapeSecondary">
            <summary>
            Inside the second Escape door.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideIntercom">
            <summary>
            Just inside the Intercom door.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideLczArmory">
            <summary>
            Inside the LCZ Armory.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideLczCafe">
            <summary>
            Inside the LCZ office room with computers.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideNukeArmory">
            <summary>
            Inside the Nuke armory.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideSurfaceNuke">
            <summary>
            Inside the surface nuke room.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside079First">
            <summary>
            Inside the first SCP-079 gate.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside173Gate">
            <summary>
            Inside SCP-079's gate.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.Inside914">
            <summary>
            Just inside of SCP-914.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideGateA">
            <summary>
            Inside the Gate-A room.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideGateB">
            <summary>
            Inside the Gate-B room.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideGr18">
            <summary>
            Inside the GR-18 door.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideHczArmory">
            <summary>
            Inside the T-Junction HCZ Armory.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideHid">
            <summary>
            Inside the Micro-HID room.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideHidLeft">
            <summary>
            Just inside the left door next to Micro-HID room.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideHidRight">
            <summary>
            Just inside the right door next to Micro-HID room.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideLczWc">
            <summary>
            Just inside the LCZ WC door.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocation.InsideServersBottom">
            <summary>
            Just inside the door at the bottom of the server's room.
            </summary>
        </member>
        <member name="T:CustomItems.API.SpawnLocationData">
            <summary>
            All of the data related to spawn locations.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocationData.DoorNames">
            <summary>
            The names of the doors attached to each spawn location.
            </summary>
        </member>
        <member name="F:CustomItems.API.SpawnLocationData.ReversedLocations">
            <summary>
            The names of spawn locations who's positions are on the opposite side of their door, and must be corrected.
            </summary>
        </member>
        <member name="T:CustomItems.Commands.GiveItem">
            <summary>
            The command to give a player an item.
            </summary>
        </member>
        <member name="P:CustomItems.Commands.GiveItem.Command">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Commands.GiveItem.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Commands.GiveItem.Description">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Commands.GiveItem.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Commands.ItemInfo">
            <summary>
            The command to view info about a specific item.
            </summary>
        </member>
        <member name="P:CustomItems.Commands.ItemInfo.Command">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Commands.ItemInfo.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Commands.ItemInfo.Description">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Commands.ItemInfo.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Commands.ListItems">
            <summary>
            The command to list all installed items.
            </summary>
        </member>
        <member name="P:CustomItems.Commands.ListItems.Command">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Commands.ListItems.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Commands.ListItems.Description">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Commands.ListItems.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Commands.SpawnItem">
            <summary>
            The command to spawn a specific item.
            </summary>
        </member>
        <member name="P:CustomItems.Commands.SpawnItem.Command">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Commands.SpawnItem.Aliases">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Commands.SpawnItem.Description">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Commands.SpawnItem.TryParseVector3(System.String,UnityEngine.Vector3@)">
            <summary>
            Tries to parse a <see cref="T:System.String"/> into a <see cref="T:UnityEngine.Vector3"/>.
            </summary>
            <param name="s">The <see cref="T:System.String"/> to parse.</param>
            <param name="vector">The <see cref="T:UnityEngine.Vector3"/> parsed from the string.</param>
            <returns>A <see cref="T:System.Boolean"/> indicating whether or not the parse was successful.</returns>
        </member>
        <member name="M:CustomItems.Commands.SpawnItem.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.CollisionHandler">
            <summary>
            Collision Handler for grenades.
            </summary>
        </member>
        <member name="F:CustomItems.CollisionHandler.Owner">
            <summary>
            The thrower of the grenade.
            </summary>
        </member>
        <member name="F:CustomItems.CollisionHandler.Grenade">
            <summary>
            The grenade itself.
            </summary>
        </member>
        <member name="T:CustomItems.Rock">
            <summary>
            Special collision handler for rocks.
            </summary>
        </member>
        <member name="P:CustomItems.Rock.Owner">
            <summary>
            Gets or sets the owner of the 'rock'.
            </summary>
        </member>
        <member name="P:CustomItems.Rock.Side">
            <summary>
            Gets or sets the <see cref="P:CustomItems.Rock.Side"/> of the rock, for determining friendly fire.
            </summary>
        </member>
        <member name="M:CustomItems.Rock.OnSpeedCollisionEnter(UnityEngine.Collision,System.Single)">
            <summary>
            The collision handler.
            </summary>
            <param name="collision">The <see cref="T:UnityEngine.Collision"/> occuring.</param>
            <param name="relativeSpeed">The <see cref="T:System.Single"/> indicating the speed.</param>
        </member>
        <member name="T:CustomItems.Configs.Config">
            <summary>
            The plugin's config class.
            </summary>
        </member>
        <member name="F:CustomItems.Configs.Config.SubclassItems">
            <summary>
            The list of <see cref="T:CustomItems.API.CustomItem"/>s and their spawn chances for each Subclass.
            </summary>
        </member>
        <member name="F:CustomItems.Configs.Config.ItemConfigs">
            <summary>
            The item configs reference object.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.IsEnabled">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Configs.Config.Debug">
            <summary>
            Gets or sets a value indicating whether if debug mode is enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.SubclassList">
            <summary>
            Gets or sets a value indicating what subclasses should get what items, and their spawn chances.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.CustomItemFolder">
            <summary>
            Gets or sets a value indicating the custom item config folder path.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.ConfigFileName">
            <summary>
            Gets or sets a value indicating the custom item config file path used for the server.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.TranqGun">
            <summary>
            Gets or sets a value indicating whether TranqGun is enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.MediGun">
            <summary>
            Gets or sets a value indicating whether MediGun is enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.LethalInjection">
            <summary>
            Gets or sets a value indicating whether Lethal Injections are enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.EmpGrenade">
            <summary>
            Gets or sets a value indicating whether EMP Grenades are enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.ImplosionGrenade">
            <summary>
            Gets or sets a value indicating whether Implosion Grenades are enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.Scp127">
            <summary>
            Gets or sets a value indicating whether SCP-127 is enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.SniperRifle">
            <summary>
            Gets or sets a value indicating whether Sniper Rifles are enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.GrenadeLauncher">
            <summary>
            Gets or sets a value indicating whether Grenade Launchers are enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.Shotgun">
            <summary>
            Gets or sets a value indicating whether Shotguns are enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.LuckyCoin">
            <summary>
            Gets or sets a value indicating whether Lucky Coins are enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.Scp1499">
            <summary>
            Gets or sets a value indicating whether SCP-1499 is enabled.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.Config.Rock">
            <summary>
            Gets or sets a value indicating whether Rocks are enabled.
            </summary>
        </member>
        <member name="M:CustomItems.Configs.Config.LoadConfigs">
            <summary>
            Loads item configs.
            </summary>
        </member>
        <member name="M:CustomItems.Configs.Config.ParseSubclassList">
            <summary>
            Parses the subclass list from the Plugin config.
            </summary>
        </member>
        <member name="T:CustomItems.Configs.ItemConfigs">
            <summary>
            Item Configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.EmpCfg">
            <summary>
            Gets or sets EMP Grenade Configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.GlCfg">
            <summary>
            Gets or sets Grenade Launcher configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.ImpCfg">
            <summary>
            Gets or sets Implosion Grenade configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.LethalCfg">
            <summary>
            Gets or sets Lethal Injection configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.LuckyCfg">
            <summary>
            Gets or sets Lucky Coin Configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.MediCfg">
            <summary>
            Gets or sets Medi-gun configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.Scp127Cfg">
            <summary>
            Gets or sets SCP-127 Configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.ShotgunCfg">
            <summary>
            Gets or sets Shotgun Configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.SniperCfg">
            <summary>
            Gets or sets Sniper Rifle Configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.TranqCfg">
            <summary>
            Gets or sets TranqGun configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.Scp1499Cfg">
            <summary>
            Gets or sets SCP-1499 configs.
            </summary>
        </member>
        <member name="P:CustomItems.Configs.ItemConfigs.RockCfg">
            <summary>
            Gets or sets Rock configs.
            </summary>
        </member>
        <member name="T:CustomItems.EventHandlers">
            <summary>
            Event Handlers.
            </summary>
        </member>
        <member name="M:CustomItems.EventHandlers.#ctor(CustomItems.Plugin)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomItems.EventHandlers"/> class.
            </summary>
            <param name="plugin">The <see cref="T:CustomItems.Plugin"/> class.</param>
        </member>
        <member name="M:CustomItems.EventHandlers.OnWaitingForPlayers">
            <summary>
            WaitingForPlayers Handler.
            </summary>
        </member>
        <member name="M:CustomItems.EventHandlers.OnReloadingConfigs">
            <summary>
            OnReloadingConfigs handler.
            </summary>
        </member>
        <member name="M:CustomItems.EventHandlers.OnRoundStart">
            <summary>
            OnRoundStart handlers.
            </summary>
        </member>
        <member name="T:CustomItems.Events.AddClassEvent">
            <summary>
            Event for <see cref="M:Subclass.TrackingAndMethods.AddClass(Exiled.API.Features.Player,Subclass.SubClass,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>.
            </summary>
        </member>
        <member name="E:CustomItems.Events.AddClassEvent.AddClass">
            <summary>
            The event.
            </summary>
        </member>
        <member name="M:CustomItems.Events.AddClassEvent.OnAddingClass(CustomItems.Events.AddClassEventArgs)">
            <summary>
            The method for calling the event safely.
            </summary>
            <param name="ev"><see cref="T:CustomItems.Events.AddClassEventArgs"/>.</param>
        </member>
        <member name="T:CustomItems.Events.AddClassEventArgs">
            <summary>
            The <see cref="T:System.EventArgs"/> for the <see cref="T:CustomItems.Events.AddClassEvent"/>.
            </summary>
        </member>
        <member name="M:CustomItems.Events.AddClassEventArgs.#ctor(Exiled.API.Features.Player,Subclass.SubClass)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomItems.Events.AddClassEventArgs"/> class.
            </summary>
            <param name="player">The <see cref="P:CustomItems.Events.AddClassEventArgs.Player"/> triggering the event.</param>
            <param name="subClass">The <see cref="T:Subclass.SubClass"/> being assigned.</param>
        </member>
        <member name="P:CustomItems.Events.AddClassEventArgs.Player">
            <summary>
            Gets the <see cref="P:CustomItems.Events.AddClassEventArgs.Player"/>.
            </summary>
        </member>
        <member name="P:CustomItems.Events.AddClassEventArgs.Subclass">
            <summary>
            Gets the <see cref="T:Subclass.SubClass"/>.
            </summary>
        </member>
        <member name="T:CustomItems.Items.EmpGrenade">
            <inheritdoc />
        </member>
        <member name="F:CustomItems.Items.EmpGrenade.lockedDoors">
            <summary>
            A list of doors locked by the EMP Grenades.
            </summary>
        </member>
        <member name="M:CustomItems.Items.EmpGrenade.#ctor(ItemType,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.EmpGrenade.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.EmpGrenade.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.EmpGrenade.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.EmpGrenade.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.EmpGrenade.ExplodeOnCollision">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.EmpGrenade.FuseTime">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.EmpGrenade.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.EmpGrenade.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.GrenadeLauncher">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.Items.GrenadeLauncher.#ctor(ItemType,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.GrenadeLauncher.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.GrenadeLauncher.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.GrenadeLauncher.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.GrenadeLauncher.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.GrenadeLauncher.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.GrenadeLauncher.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.GrenadeLauncher.OnReloadingWeapon(Exiled.Events.EventArgs.ReloadingWeaponEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.GrenadeLauncher.SpawnGrenade(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,Exiled.API.Enums.GrenadeType,Exiled.API.Features.Player)">
             <summary>
             Spawns a live grenade object on the map.
             </summary>
             <param name="position">The <see cref="T:UnityEngine.Vector3"/> to spawn the grenade at.</param>
             <param name="velocity">The <see cref="T:UnityEngine.Vector3"/> directional velocity the grenade should move at.</param>
             <param name="fuseTime">The <see cref="T:System.Single"/> fuse time of the grenade.</param>
             <param name="grenadeType">The <see cref="T:Exiled.API.Enums.GrenadeType"/> of the grenade to spawn.</param>
             <param name="player">The <see cref="T:Exiled.API.Features.Player"/> to count as the thrower of the grenade.</param>
             <returns>The <see cref="T:Grenades.Grenade"/> being spawned.</returns>
            
             I stole this from Synapse.Api.Map.SpawnGrenade -- Thanks Dimenzio, I was dreading having to find my super old version and adapting it to the new game version.
        </member>
        <member name="T:CustomItems.Items.LethalInjection">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.Items.LethalInjection.#ctor(ItemType,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.LethalInjection.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.LethalInjection.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.LethalInjection.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.LethalInjection.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.LethalInjection.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.LethalInjection.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.LuckyCoin">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.Items.LuckyCoin.#ctor(ItemType,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.LuckyCoin.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.LuckyCoin.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.LuckyCoin.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.LuckyCoin.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.LuckyCoin.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.LuckyCoin.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.LuckyCoin.OnPickingUpItem(Exiled.Events.EventArgs.PickingUpItemEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.LuckyCoin.OnDroppingItem(Exiled.Events.EventArgs.DroppingItemEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.MediGun">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.Items.MediGun.#ctor(ItemType,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.MediGun.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.MediGun.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.MediGun.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.MediGun.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.MediGun.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.MediGun.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.MediGun.OnWaitingForPlayers">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.Rock">
            <inheritdoc />
        </member>
        <member name="F:CustomItems.Items.Rock.PlayerLayerMask">
            <summary>
            The player hit layer mask.
            </summary>
        </member>
        <member name="M:CustomItems.Items.Rock.#ctor(ItemType,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.Rock.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Rock.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Rock.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Rock.OnThrowingGrenade(Exiled.Events.EventArgs.ThrowingGrenadeEventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.Scp127">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.Items.Scp127.#ctor(ItemType,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.Scp127.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Scp127.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Scp127.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Scp127.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Scp127.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Scp127.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Scp127.OnReloadingWeapon(Exiled.Events.EventArgs.ReloadingWeaponEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Scp127.ItemGiven(Exiled.API.Features.Player)">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.Scp1499">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.Items.Scp1499.#ctor(ItemType,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.Scp1499.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Scp1499.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Scp1499.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Scp1499.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Scp1499.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Scp1499.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Scp1499.OnDroppingItem(Exiled.Events.EventArgs.DroppingItemEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Scp1499.OnWaitingForPlayers">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.Shotgun">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.Items.Shotgun.#ctor(ItemType,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.Shotgun.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Shotgun.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Shotgun.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.Shotgun.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Shotgun.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.Shotgun.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.SniperRifle">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.Items.SniperRifle.#ctor(ItemType,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.SniperRifle.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.SniperRifle.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.SniperRifle.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.SniperRifle.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.SniperRifle.ModBarrel">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.SniperRifle.ModSight">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.SniperRifle.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.SniperRifle.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.ImplosionGrenade">
            <inheritdoc />
        </member>
        <member name="F:CustomItems.Items.ImplosionGrenade.layerMask">
            <summary>
            The layer mask used.
            </summary>
        </member>
        <member name="M:CustomItems.Items.ImplosionGrenade.#ctor(ItemType,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.ImplosionGrenade.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.ImplosionGrenade.SpawnLocations">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.ImplosionGrenade.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.ImplosionGrenade.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.ImplosionGrenade.ExplodeOnCollision">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.ImplosionGrenade.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.ImplosionGrenade.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Items.TranqGun">
            <inheritdoc />
        </member>
        <member name="M:CustomItems.Items.TranqGun.#ctor(ItemType,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="P:CustomItems.Items.TranqGun.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.TranqGun.Description">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Items.TranqGun.SpawnLimit">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.TranqGun.LoadEvents">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Items.TranqGun.UnloadEvents">
            <inheritdoc/>
        </member>
        <member name="T:CustomItems.Methods">
            <summary>
            Methods.
            </summary>
        </member>
        <member name="M:CustomItems.Methods.#ctor(CustomItems.Plugin)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomItems.Methods"/> class.
            </summary>
            <param name="plugin">The <see cref="T:CustomItems.Plugin"/> class.</param>
        </member>
        <member name="M:CustomItems.Methods.CheckAndPatchSubclassing">
            <summary>
            Checks if subclassing is installed then patches.
            </summary>
        </member>
        <member name="T:CustomItems.Patches.AddClass">
            <summary>
            Patch for <see cref="M:Subclass.TrackingAndMethods.AddClass(Exiled.API.Features.Player,Subclass.SubClass,System.Boolean,System.Boolean,System.Boolean,System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:CustomItems.Patches.AddClass.Postfix(Exiled.API.Features.Player,Subclass.SubClass,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Postfix - Called after base method finishes.
            </summary>
            <param name="player">The <see cref="T:Exiled.API.Features.Player"/> being changed.</param>
            <param name="subClass">The <see cref="T:Subclass.SubClass"/> being added.</param>
            <param name="is035">Whether or not they are SCP-035.</param>
            <param name="lite">Whether or not it is lite.</param>
            <param name="escaped">Whether or not it is an escape.</param>
            <param name="disguised">Whether or not the player is disguised.</param>
        </member>
        <member name="T:CustomItems.Plugin">
            <inheritdoc />
        </member>
        <member name="F:CustomItems.Plugin.Singleton">
            <summary>
            The static Plugin reference.
            </summary>
        </member>
        <member name="F:CustomItems.Plugin.HarmonyInstance">
            <summary>
            The Harmony instance.
            </summary>
        </member>
        <member name="F:CustomItems.Plugin.Rng">
            <summary>
            The Random object.
            </summary>
        </member>
        <member name="P:CustomItems.Plugin.Author">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Plugin.Name">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Plugin.Prefix">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Plugin.RequiredExiledVersion">
            <inheritdoc/>
        </member>
        <member name="P:CustomItems.Plugin.Methods">
            <summary>
            Gets the Methods class.
            </summary>
        </member>
        <member name="P:CustomItems.Plugin.EventHandlers">
            <summary>
            Gets the EventHandlers class.
            </summary>
        </member>
        <member name="P:CustomItems.Plugin.ItemManagers">
            <summary>
            Gets the list of current Item Managers.
            </summary>
        </member>
        <member name="M:CustomItems.Plugin.OnEnabled">
            <inheritdoc/>
        </member>
        <member name="M:CustomItems.Plugin.OnDisabled">
            <inheritdoc/>
        </member>
    </members>
</doc>
